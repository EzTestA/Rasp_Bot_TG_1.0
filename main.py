#!/usr/bin/env python3
import os
import signal
import sys
import time
import psutil
import socket
import subprocess
from app import app as flask_app
from app import init_data_structure, load_config, start_bot

def get_local_ip():
    """–ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å"""
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("8.8.8.8", 80))
        local_ip = s.getsockname()[0]
        s.close()
        return local_ip
    except:
        return "127.0.0.1"

def get_external_ip():
    """–ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP"""
    try:
        import requests
        return requests.get('https://api.ipify.org').text
    except:
        return None

def signal_handler(sig, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è graceful shutdown"""
    print("\n–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞
    from app import stop_bot
    stop_bot()
    sys.exit(0)

if __name__ == "__main__":
    try:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞...")
        killed = 0
        current_pid = os.getpid()
        
        for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
            try:
                cmdline = ' '.join(proc.info['cmdline'] or [])
                if ('python' in proc.info['name'].lower() and 
                    'bot.py' in cmdline and 
                    str(current_pid) not in cmdline):
                    
                    proc.kill()
                    killed += 1
                    print(f"‚ö†Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å (PID: {proc.info['pid']})")
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
        
        if killed > 0:
            print(f"üõë –ó–∞–≤–µ—Ä—à–µ–Ω–æ {killed} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤")
            time.sleep(1)

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, signal_handler)
        signal.signal(signal.SIGTERM, signal_handler)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        init_data_structure()
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        config = load_config()
        bot_status = "‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω)"
        
        if config and config.get('token'):
            print("üöÄ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞...")
            if start_bot():
                bot_status = "‚úÖ –ó–∞–ø—É—â–µ–Ω"
            else:
                bot_status = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞"
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ IP-–∞–¥—Ä–µ—Å–æ–≤
        local_ip = get_local_ip()
        external_ip = get_external_ip()
        port = 5000
        
        print("\n" + "="*50)
        print(f"–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞: {bot_status}")
        print(f"üåê –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å: http://{local_ip}:{port}")
        
        if external_ip:
            print(f"üåç –í–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å: http://{external_ip}:{port}")
            print("   (–î–æ—Å—Ç—É–ø–Ω–æ, –µ—Å–ª–∏ –ø—Ä–æ–±—Ä–æ—à–µ–Ω –ø–æ—Ä—Ç –≤ —Ä–æ—É—Ç–µ—Ä–µ –∏ –Ω–µ—Ç —Ñ–∞–µ—Ä–≤–æ–ª–∞)")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–Ω–µ—à–Ω–∏–π IP-–∞–¥—Ä–µ—Å")
        
        print("\n‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω–∫—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º")
        print("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞")
        print("="*50 + "\n")
        
        flask_app.run(host='0.0.0.0', port=port)
        
    except Exception as e:
        print(f"‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)